{"version":3,"sources":["../js/parallax-pg.min.js"],"names":["pgScroll","document","querySelectorAll","parallaxPgScroll","o","window","pageYOffset","innerHeight","forEach","t","s","offsetTop","offsetHeight","e","parseFloat","getAttribute","style","transform","transition","addEventListener","pgMouse","startingPos","xPos","begin","end","innerWidth","position","yPos","startingXPosRange","startingYPosRange","itemPosition","x","y","xRange","yRange","startPgMouse","clientX","fraction","clientY","zIndex","windowResize","mouseWrapper","breakpointMedium","console","log"],"mappings":";AAAwrE,SAAA,EAAA,GAAA,MAAA,IAAA,MAAA,IAAA,EAAA,kBAAxrE,IAAMA,EAAWC,SAASC,iBAAiB,cAAe,SAASC,IAA2BC,IAAAA,EAAIC,OAAOC,YAAcD,OAAOE,YAAc,EAAGP,EAASQ,QAAQ,SAAAC,GAAaC,IAAAA,EAAID,EAAEE,UAAYF,EAAEG,aAAe,EAAGC,EAAIT,EAAIM,EAAGD,EAAEP,iBAAiB,mBAAmBM,QAAQ,SAAAJ,GAAaK,IAAAA,EAAIK,WAAWV,EAAEW,aAAa,kBAAmBX,EAAEY,MAAMC,UAA4BJ,gBAAAA,OAAAA,EAAIJ,EAAI,EAAQL,OAAAA,EAAEY,MAAME,WAAa,qBAAyBjB,SAASkB,iBAAiB,SAAU,WAAQhB,MAAuB,IAAMiB,EAAUnB,SAASC,iBAAiB,aAAcmB,EAAc,CAAEC,KAAM,CAAEC,MAAO,EAAGC,IAAKnB,OAAOoB,WAAYC,SAAU,GAAKC,KAAM,CAAEJ,MAAO,EAAGC,IAAKnB,OAAOE,YAAamB,SAAU,IAAOE,EAAoBP,EAAYC,KAAKE,IAAMH,EAAYC,KAAKC,MAAOM,EAAoBR,EAAYM,KAAKH,IAAMH,EAAYM,KAAKJ,MAAOO,EAAe,CAAEC,EAAG,CAAER,OAAQ,IAAKC,IAAK,IAAKE,SAAU,GAAKM,EAAG,CAAET,OAAQ,IAAKC,IAAK,IAAKE,SAAU,IAAOO,EAASH,EAAaC,EAAEP,IAAMM,EAAaC,EAAER,MAAOW,EAASJ,EAAaE,EAAER,IAAMM,EAAaE,EAAET,MAAOY,EAAe,SAAA/B,GAAOiB,EAAYC,KAAKI,SAAWtB,EAAEgC,QAASf,EAAYC,KAAKe,UAAYhB,EAAYC,KAAKI,SAAWL,EAAYC,KAAKC,OAASK,EAAmBP,EAAYM,KAAKD,SAAWtB,EAAEkC,QAASjB,EAAYM,KAAKU,UAAYhB,EAAYM,KAAKD,SAAWL,EAAYM,KAAKJ,OAASM,EAAmBC,EAAaC,EAAEL,SAAWI,EAAaC,EAAEP,IAAMH,EAAYC,KAAKe,SAAWJ,EAAQH,EAAaE,EAAEN,SAAWI,EAAaE,EAAER,IAAMH,EAAYM,KAAKU,SAAWH,EAAQd,EAAQZ,QAAQ,SAAAJ,GAAOA,EAAEF,iBAAiB,mBAAmBM,QAAQ,SAAAJ,GAAaK,IAAAA,EAAIK,WAAWV,EAAEW,aAAa,kBAAuBL,EAAI,CAAEqB,EAAGD,EAAaC,EAAEL,SAAWI,EAAaC,EAAEL,SAAWjB,EAAGuB,EAAGF,EAAaE,EAAEN,SAAWI,EAAaE,EAAEN,SAAWjB,EAAG8B,OAAQ,IAAM,IAAM9B,GAAKL,EAAEY,MAAMuB,OAAS7B,EAAE6B,OAAQnC,EAAEY,MAAMC,UAAyBP,aAAAA,OAAAA,EAAEqB,EAAQrB,QAAAA,OAAAA,EAAEsB,EAAxE,MAA+E5B,EAAEY,MAAME,WAAa,uBAA2BsB,EAAe,WAAQnB,EAAYC,KAAKE,IAAMnB,OAAOoB,WAAgCJ,EAAAA,qBAApBO,EAAoBP,EAAYC,KAAKE,IAAMH,EAAYC,KAAKC,MAAOF,EAAYM,KAAKH,IAAMnB,OAAOE,YAAiCc,EAAAA,qBAApBQ,EAAoBR,EAAYM,KAAKH,IAAMH,EAAYM,KAAKJ,OAASkB,EAAexC,SAASC,iBAAiB,aAAcwC,EAAmB,OAAQrC,OAAOoB,WAAa,OAASgB,EAAajC,QAAQ,SAAAJ,GAAOA,EAAEe,iBAAiB,YAAagB,GAAe/B,EAAEe,iBAAiB,SAAUqB,KAAmBG,QAAQC,IAAI","file":"parallax-pg.min.600fc6ec.js","sourceRoot":"../src/pages","sourcesContent":["const pgScroll = document.querySelectorAll(\".pg-scroll\"); function parallaxPgScroll() { const o = window.pageYOffset + window.innerHeight / 2; pgScroll.forEach(t => { const s = t.offsetTop + t.offsetHeight / 2, e = o - s; t.querySelectorAll(\"[data-pg-speed]\").forEach(o => { const t = parseFloat(o.getAttribute(\"data-pg-speed\")); o.style.transform = `translate(0, ${e * t / 2}px)`, o.style.transition = \"transform ease\" }) }) } document.addEventListener(\"scroll\", () => { parallaxPgScroll() }); const pgMouse = document.querySelectorAll(\".pg-mouse\"), startingPos = { xPos: { begin: 0, end: window.innerWidth, position: 0 }, yPos: { begin: 0, end: window.innerHeight, position: 0 } }, startingXPosRange = startingPos.xPos.end - startingPos.xPos.begin, startingYPosRange = startingPos.yPos.end - startingPos.yPos.begin, itemPosition = { x: { begin: -150, end: 150, position: 0 }, y: { begin: -150, end: 150, position: 0 } }, xRange = itemPosition.x.end - itemPosition.x.begin, yRange = itemPosition.y.end - itemPosition.y.begin, startPgMouse = o => { startingPos.xPos.position = o.clientX, startingPos.xPos.fraction = (startingPos.xPos.position - startingPos.xPos.begin) / startingXPosRange, startingPos.yPos.position = o.clientY, startingPos.yPos.fraction = (startingPos.yPos.position - startingPos.yPos.begin) / startingYPosRange, itemPosition.x.position = itemPosition.x.end - startingPos.xPos.fraction * xRange, itemPosition.y.position = itemPosition.y.end - startingPos.yPos.fraction * yRange, pgMouse.forEach(o => { o.querySelectorAll(\"[data-pg-speed]\").forEach(o => { const t = parseFloat(o.getAttribute(\"data-pg-speed\")); let s = { x: itemPosition.x.position - itemPosition.x.position * t, y: itemPosition.y.position - itemPosition.y.position * t, zIndex: 1e4 - 1e4 * t }; o.style.zIndex = s.zIndex, o.style.transform = `translate(${s.x}px, ${s.y}px`, o.style.transition = \"transform  ease\" }) }) }, windowResize = () => { startingPos.xPos.end = window.innerWidth, startingXPosRange = startingPos.xPos.end - startingPos.xPos.begin, startingPos.yPos.end = window.innerHeight, startingYPosRange = startingPos.yPos.end - startingPos.yPos.begin }, mouseWrapper = document.querySelectorAll(\".pg-mouse\"), breakpointMedium = \"1050\"; window.innerWidth > \"1050\" ? mouseWrapper.forEach(o => { o.addEventListener(\"mousemove\", startPgMouse), o.addEventListener(\"resize\", windowResize) }) : console.log(\"we've made pg-mouse work only on screen above tablet size\");\n"]}